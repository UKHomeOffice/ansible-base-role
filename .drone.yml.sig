eyJhbGciOiJIUzI1NiJ9.LS0tCnBpcGVsaW5lOgogIGJ1aWxkX2ltYWdlOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gc2VkIC1yaSAicy9BTlNJQkxFX0lNQUdFLyR7QU5TSUJMRV9JTUFHRT1sYXRlc3R9L2ciIERvY2tlcmZpbGUgCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC0tYnVpbGQtYXJnIERST05FX1JFUE9fTElOSz0ke0RST05FX1JFUE9fTElOS30gLS1idWlsZC1hcmcgRFJPTkVfUkVNT1RFX1VSTD0ke0RST05FX1JFTU9URV9VUkx9IC0tYnVpbGQtYXJnIERST05FX0NPTU1JVF9SRUY9JHtEUk9ORV9DT01NSVRfUkVGfSAtLWJ1aWxkLWFyZyBEUk9ORV9DT01NSVRfU0hBPSR7RFJPTkVfQ09NTUlUX1NIQX0gLS1idWlsZC1hcmcgRFJPTkVfQlVJTERfQ1JFQVRFRD0ke0RST05FX0JVSUxEX0NSRUFURUR9IC0tYnVpbGQtYXJnIERST05FX0JVSUxEX05VTUJFUj0ke0RST05FX0JVSUxEX05VTUJFUn0gLXQgYW5zaWJsZS1iYXNlIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDoKICAgICAgZXZlbnQ6IFt0YWcscHVzaF0KCiAgdGVzdF9pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBydW4gLS1ybSAtdCAtZSBXT1JLRElSPS9ldGMvYW5zaWJsZSBhbnNpYmxlLWJhc2UgYW5zaWJsZS1wbGF5Ym9vayAtLXN5bnRheC1jaGVjayBwbGF5cy9iYXNlLnltbCAtdnZ2CiAgICB3aGVuOgogICAgICBldmVudDogW3RhZyxwdXNoXQoKICBpbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK2RhdGFwbGF0Zm9ybV9ib3QiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBhbnNpYmxlLWJhc2UgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Fuc2libGUtYmFzZToke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHRhZyBhbnNpYmxlLWJhc2UgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Fuc2libGUtYmFzZTpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvYW5zaWJsZS1iYXNlOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvYW5zaWJsZS1iYXNlOmxhdGVzdAogICAgd2hlbjoKICAgICAgZXZlbnQ6IFt0YWcscHVzaF0KCiAgdGFnX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZGF0YXBsYXRmb3JtX2JvdCIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIGFuc2libGUtYmFzZSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvYW5zaWJsZS1iYXNlOiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9hbnNpYmxlLWJhc2U6JHtEUk9ORV9UQUd9CiAgICB3aGVuOgogICAgICBldmVudDogW3RhZyxwdXNoXQoKICB0cmlnZ2VyX2RhdGFfcGxhdGZvcm1fdGVycmFmb3JtX2Ryb25lX2J1aWxkOgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9kcm9uZS10cmlnZ2VyOmxhdGVzdAogICAgZHJvbmVfc2VydmVyOiBodHRwczovL2Ryb25lLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsKICAgIHJlcG86IFVLSG9tZU9mZmljZS9kYXRhX3BsYXRmb3JtX3RlcnJhZm9ybQogICAgZHJvbmVfdG9rZW46ICR7RFJPTkVfVE9LRU59CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogW3RhZyxwdXNoXQoKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEtZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCg._AeA9HaN6fuSW_rrnJ52hJ5lgLywsNCA5gjH6hSSSQU